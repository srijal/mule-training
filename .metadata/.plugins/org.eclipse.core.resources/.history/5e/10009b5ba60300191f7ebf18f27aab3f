<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:amqp="http://www.mulesoft.org/schema/mule/amqp"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/amqp http://www.mulesoft.org/schema/mule/amqp/current/mule-amqp.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="post_eventcatalog_flow" doc:id="0b31fe0d-015e-42cc-b36f-08a8a0018419" >
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="ff9669a9-9004-45d6-baea-fa4db6498638">
            <ee:message>
            </ee:message>
			<ee:variables >
				<ee:set-variable variableName="var_post_eventcatalog" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
        </ee:transform>
		<http:request method="GET" doc:name="Check whether exchange already exists" doc:id="47b6edea-6f9e-4c40-8b0d-2e296f080d6a" config-ref="HTTP_Request_configuration_RabbitMQ_API" path="#['/exchanges/${rabbitmq.vhost}/']" target="exchangelist"/>
		<choice doc:name="Choice" doc:id="48e9dca2-0a32-4bfb-93da-f99be55b70b5" >
			<when expression="#[vars.exchangelist.name contains vars.var_post_eventcatalog.exchangename]">
				<db:select doc:name="Select" doc:id="d3a7db66-e50d-46b2-acf4-ec6f830d6182" config-ref="MSSQL_Database_Config">
					<db:sql >SELECT * FROM eventcatalog
WHERE exchangename = :ExchangeName</db:sql>
					<db:input-parameters ><![CDATA[#[output application/java
 ---
 {   'ExchangeName' : vars.var_post_eventcatalog.exchangename default ('')
 }]]]></db:input-parameters>
				</db:select>
				<ee:transform doc:name="Transform Message" doc:id="63539fb1-97ce-469e-af72-dc3d4bdec767" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message" : "Exchange already exists"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<http:request method="PUT" doc:name="Create new exchange for new Event Catalog" doc:id="18e1b9b0-3812-485f-9dd0-1a59852be028" config-ref="HTTP_Request_configuration_RabbitMQ_API" path="#['/exchanges/${rabbitmq.vhost}/' ++ vars.var_post_eventcatalog.exchangename]">
					<http:body ><![CDATA[#[output application/json
---
{	
	"type" : "fanout",
	"durable" : "true"
}]]]></http:body>
				</http:request>
				<db:insert doc:name="Insert" doc:id="6183a693-50e3-4043-9990-bdeaab0a81af" config-ref="MSSQL_Database_Config" autoGenerateKeys="true">
			<db:sql>INSERT INTO [dbo].[EventCatalog]
           (EventName,QueueName,RoutingKey,Headers,ExchangeName,ExchangeType)
     VALUES ( :EventName,  :QueueName,  :RoutingKey,  :Headers, :ExchangeName, :ExchangeType)</db:sql>
			<db:input-parameters><![CDATA[#[output application/java
 ---
 {
     'EventName' : vars.var_post_eventcatalog.eventname,
     'QueueName' : vars.var_post_eventcatalog.queuename default (''),
     'RoutingKey': vars.var_post_eventcatalog.routingkey default (''),
     'Headers': vars.var_post_eventcatalog.headers default (''),
     'ExchangeName' : vars.var_post_eventcatalog.exchangename default (''),
	 'ExchangeType': vars.var_post_eventcatalog.exchangetype default ('fanout')
 }]]]></db:input-parameters>
			<db:auto-generated-keys-column-indexes>
				<db:auto-generated-keys-column-index value="1" />
			</db:auto-generated-keys-column-indexes>
			<db:auto-generated-keys-column-names>
				<db:auto-generated-keys-column-name value="EventTypeID" />
			</db:auto-generated-keys-column-names>
		</db:insert>
				<ee:transform doc:name="Transform Message" doc:id="5bc42cdf-6fa8-40ab-95b9-3bb35f293f3b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message" : vars.var_post_eventcatalog.exchangename ++ ' : Exchange created',
	"eventypeid" : payload.generatedKeys[0]
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="03de86e7-6c3d-4162-a795-f7e58f2afd74" message="#[vars.eventtypeid]"/>
	</flow>
	<flow name="get_eventcatalog_flow" doc:id="45a495e1-8bb9-4230-aa44-b5aff751f685" >
		<db:select doc:name="Select" doc:id="03308b89-51bc-4539-a42a-91030c304753" config-ref="MSSQL_Database_Config">
			<db:sql >SELECT * FROM EventCatalog</db:sql>
		</db:select>
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="4123bb02-9c42-4969-97cc-107e18062c7b">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	eventtypeid: payload01.EventTypeID,
	eventname: payload01.EventName,
	exchangename: payload01.ExchangeName,
	exchangetype: payload01.ExchangeType,
	queuename: payload01.QueueName default "",
	routingkey: payload01.RoutingKey,
	headers: payload01.Headers
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
	</flow>
</mule>
