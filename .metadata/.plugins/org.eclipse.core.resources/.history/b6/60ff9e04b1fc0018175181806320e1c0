<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="01f1cd17-a36e-4414-a14f-6c373e4b517f" basePath="/api" >
		<http:request-connection host="localhost" port="15672" >
			<http:authentication >
				<http:basic-authentication username="guest" password="guest" />
			</http:authentication>
		</http:request-connection>
	</http:request-config>
	<http:request-config name="HTTP_Request_configuration1" doc:name="HTTP Request configuration" doc:id="275df1a3-4011-4b2a-87dd-4bb689a7da71" basePath="/api" >
		<http:request-connection host="localhost" port="15672" >
			<http:authentication >
				<http:basic-authentication username="guest" password="guest" />
			</http:authentication>
		</http:request-connection>
	</http:request-config>
	<flow name="rabbitmq-messenger-apiFlow" doc:id="c949c240-a41c-4589-9722-289747f57ec9" doc:description="TO DO
#Validate EventID
	GET Event detail from Database
	If No detail found
		Return response to end user
	else
	get exchange name
		validate exchange name. Make sure exchange exists on messaging server
		/api/exchanges/vhost/name
			if no exchange found
				god knows.. I don't know what to do here
			If found
				Create JSON data 
					{&quot;properties&quot;:{},&quot;routing_key&quot;:&quot;my key&quot;,&quot;payload&quot;:&quot;my body&quot;,&quot;payload_encoding&quot;:&quot;string&quot;} and save it in variable
		
	User HTTP Request to make REST API call to messaging server for publishing message
		Basic Authentication
		End Point
			/exchanges/{vhost}/{exchange-name}/publish
	Return success response (201) since this is a post call

THINGS TO NOTE:
Create config file and add paramaters whenever possible
Log every step
Database table minimum records: exchangename, routing key, vhost info, ">
		<http:listener doc:name="Listener" doc:id="efb0977d-d90d-43a5-8e24-d5fca7f4f3ed" path="/events/send" outputMimeType="application/json" allowedMethods="POST" config-ref="HTTP_Listener_config"/>
		<set-variable value="#[payload]" doc:name="Message Payload" doc:id="4f2b937f-f8fb-43df-9c4b-88a84b8f22b3" variableName="	msgPayload"/>
		<db:select doc:name="Select" doc:id="c7845535-3644-4aa7-93c8-2b82042d23b4" config-ref="Database_Config">
			<db:sql >SELECT * FROM EventCatalog where EventTypeID= :ID</db:sql>
			<db:input-parameters ><![CDATA[#[output application/java
 ---
 {
     'ID' : vars.msgPayload.eventtypeid
 }]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="7f2da3fb-1f27-453e-9b75-cdfaa938055e" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="eventtypedetails" ><![CDATA[%dw 2.0
output application/json
---
{
	eventtypeid: payload.EventTypeID,
	eventname: payload.EventName default "",
	exchangename: payload.ExchangeName,
	routingkey: payload.RoutingKey,
	payload_encoding: payload.Payload_Encoding,
	vhost: payload.vhost default ""
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<http:request method="POST" doc:name="Request" doc:id="8c77f97e-84d7-4574-8e00-22b749301f45" config-ref="HTTP_Request_configuration" path='#[output application/java
---
"/exchanges/capella.vhost/exam/publish"]'>
			<http:body ><![CDATA[#[output application/json
---
{"properties":{},"routing_key":"2019exam","payload":"Good Luck Fellas 2019","payload_encoding":"string"}]]]></http:body>
		</http:request>
		<ee:transform doc:name="Transform Message" doc:id="bfa97029-cf35-462b-9f1f-f07e6b556471">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
